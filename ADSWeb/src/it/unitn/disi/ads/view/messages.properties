# Global messages (not associated with any specific functionality):
global.title.ads = ADS
global.title.adsFull = Ambulance Dispatch System
global.title.cityName = City Name / Department Name
global.title.welcome = Welcome
global.title.error = Error
global.link.manageEmployees = Manage Employees
global.link.manageAmbulances = Manage Ambulances
global.link.receiveCall = Receive Emergency Call
global.menu.home = Home
global.menu.logout = Log out
global.text.developedBy = Developed by
global.text.publishedUnder = Published under a
global.text.ccLicense = Creative Commons License
global.text.designBy = Design by
global.text.welcome = Welcome to the Ambulance Dispatch System.
global.text.loginInstructions = Please identify yourself using your username and password below.
global.text.identifiedAs = You have been identified as
global.text.instructions = Use the menu above to access the functionality related to your user profile.
global.text.error = There has been a problem trying to satisfy your request. Please try again. If the error persists, contact the administrators.
global.text.backToIndex = Click here to go back to the initial page
global.form.username = Username
global.form.password = Password
global.button.login = Log in
global.info.login = You were successfully logged in.
global.info.logout = You were successfully logged out.
global.error.login = Login failed. Please try again or contact the system administrators if you are sure you typed the correct username and password.
global.error.login.unknownUsername = The provided username is unknown. Please certify that you have typed your username correctly. If the problem persists, contact the administrators.
global.error.login.incorrectPassword = The provided password doesn't match. Please certify that you have typed the correct password. If the problem persists, contact the administrators.
global.error.login.multipleUsers = There has been an internal error (multiple users for the same username in the database). Please contact the system administrator.
global.error.login.md5Error = There has been an internal error (generating MD5 hash for your password). Please contact the system administrator.
global.error.login.containerRejected = There has been an internal error (the container rejected your username and password). Please contact the system administrator.
global.error.login.noHttpRequest = There has been an internal error (there is no HTTP request in this context). Please contact the system administrator.
global.error.expired = Your session has expired. Please log in again.
global.error.other = An unexpected error has occurred. Please contact the system administrator and inform him/her the exact time for this error:

# Description for the enumerations.
enum.employeeType.ADMIN = Admin
enum.employeeType.DISPATCHER = Dispatcher
enum.employeeType.DRIVER = Driver
enum.employeeType.OPERATOR = Operator

# Messages associated with use case "Manage Employees":
manageEmployees.title = Employee Management
manageEmployees.title.create = New employee
manageEmployees.title.update = Edit employee
manageEmployees.title.retrieve = Employee information
manageEmployees.text.noEntities = There are no employees registered in the system.
manageEmployees.text.filterInfo = Filtering {0}: {1}
manageEmployees.text.navigationMessage = Showing entries {0} - {1} from a total of {2} registered employees.
manageEmployees.text.navigationMessageWithFilter = Showing entries {0} - {1} from a total of {2} filtered employees.
manageEmployees.text.noEntitiesFiltered = No employee found matching the given filter.
manageEmployees.text.confirmDeletion = Do you want to permanently delete the following employees?
manageEmployees.text.filter = Filter
manageEmployees.text.filter.byName = by name
manageEmployees.text.filter.byType = by type
manageEmployees.form.name = Name
manageEmployees.form.username = Username
manageEmployees.form.password = Password
manageEmployees.form.type = Type
manageEmployees.button.cancelFilter = Clear filter
manageEmployees.button.retrieve = View employee
manageEmployees.button.update = Edit employee
manageEmployees.button.delete = Delete employee
manageEmployees.button.first = First
manageEmployees.button.previous = Previous
manageEmployees.button.next = Next
manageEmployees.button.last = Last
manageEmployees.button.create = New employee
manageEmployees.button.cancelDeletion = Cancel
manageEmployees.button.confirmDeletion = Confirm
manageEmployees.button.cancel = Cancel
manageEmployees.button.save = Save
manageEmployees.button.back = Back
manageEmployees.button.filter = Filter
manageEmployees.error.repeatedUsername = The employee "{0}" is already registered with the same username. Registering two employees with the same username is not allowed.
manageEmployees.error.deleteYourself = Deleting yourself from the system is not allowed.
manageEmployees.error.multipleInstancesError = Error while updating the ambulance (multiple instances with same unique data). Please contact the system administrator.
manageEmployees.info.createSucceeded = The new employee was successfully registered.
manageEmployees.info.updateSucceeded = The employee''s data was updated successfully.
manageEmployees.info.deleteSucceeded = The employees were successfully deleted.

# Messages associated with use case "Manage Employees":
manageAmbulances.title = Ambulance Management
manageAmbulances.title.create = New ambulance
manageAmbulances.title.update = Edit ambulance
manageAmbulances.title.retrieve = Ambulance information
manageAmbulances.title.status = Ambulance status
manageAmbulances.title.deactivationHistory = Ambulance deactivation history
manageAmbulances.title.driver = Assigned driver
manageAmbulances.title.assignmentHistory = Ambulance assignment history
manageAmbulances.text.noEntities = There are no ambulances registered in the system.
manageAmbulances.text.filterInfo = Filtering {0}: {1}
manageAmbulances.text.navigationMessage = Showing entries {0} - {1} from a total of {2} registered ambulances.
manageAmbulances.text.navigationMessageWithFilter = Showing entries {0} - {1} from a total of {2} filtered ambulances.
manageAmbulances.text.noEntitiesFiltered = No ambulance found matching the given filter.
manageAmbulances.text.confirmDeletion = Do you want to permanently delete the following ambulances?
manageAmbulances.text.filter = Filter
manageAmbulances.text.filter.byNumber = by number
manageAmbulances.text.filter.byLicensePlate = by license plate
manageAmbulances.text.status = Status
manageAmbulances.text.status.active = Active
manageAmbulances.text.status.inactive = Inactive
manageAmbulances.text.currentDriver = Current Driver
manageAmbulances.text.currentDriver.none = (Unassigned)
manageAmbulances.text.ambulanceNumber = Ambulance #
manageAmbulances.text.currentStatus = Current status
manageAmbulances.text.activeDeactivationInstructions = The ambulance is currently active. You can use the form below to deactivate the ambulance. Please fill in the reason for deactivation and click on "Deactivate".
manageAmbulances.text.inactiveDeactivationInstructions = The table below shows information on the ambulance status. Click on "End deactivation" to bring the ambulance back to active. Today''s date will be registered as the end of the deactivation period.
manageAmbulances.text.deactivationHistoryInstructions = The information above concerns only the present status of the ambulance. To see all previous deactivations, please click the "View deactivation history" button, below.
manageAmbulances.text.noDeactivations = This ambulance has never been deactivated.
manageAmbulances.text.freeAssignmentInstructions = The ambulance is currently unassigned. You can use the form below to assign a driver to the ambulance. Please select the driver from the drop-down list and click on "Assign driver".
manageAmbulances.text.notFreeAssignmentInstructions = The table below shows information on the ambulance''s current assignment. Choose a new driver (or no driver) and click on "Change assignment" to end the current assignment and create a new one (if a driver is chosen). Today''s date will be registered as the end of the assignment period.
manageAmbulances.text.assignmentHistoryInstructions = The information above concerns only the current assignment of the ambulance. To see all previous assignments, please click the "View assignment history" button, below.
manageAmbulances.text.noAssignments = This ambulance has never been assigned to a driver.
manageAmbulances.form.number = Number
manageAmbulances.form.licensePlate = License Plate
manageAmbulances.form.deactivation.beginDate = Begin
manageAmbulances.form.deactivation.reason = Reason
manageAmbulances.form.deactivation.endDate = End
manageAmbulances.form.assignment.beginDate = Begin
manageAmbulances.form.assignment.endDate = End
manageAmbulances.form.assignment.driver = Driver
manageAmbulances.button.cancelFilter = Clear filter
manageAmbulances.button.retrieve = View ambulance
manageAmbulances.button.update = Edit ambulance
manageAmbulances.button.delete = Delete ambulance
manageAmbulances.button.first = First
manageAmbulances.button.previous = Previous
manageAmbulances.button.next = Next
manageAmbulances.button.last = Last
manageAmbulances.button.create = New ambulance
manageAmbulances.button.cancelDeletion = Cancel
manageAmbulances.button.confirmDeletion = Confirm
manageAmbulances.button.cancel = Cancel
manageAmbulances.button.save = Save
manageAmbulances.button.back = Back
manageAmbulances.button.filter = Filter
manageAmbulances.button.deactivate = Deactivate
manageAmbulances.button.endDeactivation = End deactivation
manageAmbulances.button.viewDeactivationHistory = View deactivation history
manageAmbulances.button.assign = Assign driver
manageAmbulances.button.changeAssignment = Change assignment
manageAmbulances.button.viewAssignmentHistory = View assignment history
manageAmbulances.error.repeatedNumber = There''s already another ambulance registered with this number.
manageAmbulances.error.repeatedLicensePlate = Ambulance # {0} has the same license plate.
manageAmbulances.error.multipleInstancesError = Error while updating the ambulance (multiple instances with same unique data). Please contact the system administrator.
manageAmbulances.error.deactivationError = There has been an internal error (regarding the deactivations of ambulance # {0}). Please contact the system administrator.
manageAmbulances.error.assignmentError = There has been an internal error (regarding the assignments of ambulance # {0}). Please contact the system administrator.
manageAmbulances.error.assignmentErrorNotDriver = There has been an internal error ({0} is not a driver and can''t be assigned to ambulance # {1}). Please contact the system administrator.
manageAmbulances.info.createSucceeded = The new ambulance was successfully registered.
manageAmbulances.info.updateSucceeded = The ambulance''s data was updated successfully.
manageAmbulances.info.deleteSucceeded = The ambulances were successfully deleted.
manageAmbulances.info.deactivationStarted = Successfully deactivated ambulance.
manageAmbulances.info.deactivationEnded = Successfully reactivated ambulance.
manageAmbulances.info.assignmentStarted = Successfully assigned driver to ambulance.
manageAmbulances.info.assignmentEnded = Successfully removed driver assignment from ambulance.
manageAmbulances.warn.sameDriverAssignment = Ambulance is already currently assigned to driver {0}. Choose a different driver (or no driver) if you wish to change (or end) the current assignment.

# Messages associated with use case "Input Emergency Information":
receiveCall.title = Report New Emergency
receiveCall.text.inputInfoSuccess = The emergency information has been saved and the call is open. You should now determine the uniqueness of the call and send it to dispatchers.
receiveCall.form.description = Description of the emergency
receiveCall.form.address = Location of the emergency
receiveCall.form.callerInfo = Information on the caller
receiveCall.button.inputInfo = Input Information
